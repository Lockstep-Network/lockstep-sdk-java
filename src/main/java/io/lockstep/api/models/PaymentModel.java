
/**
 * Lockstep Platform SDK for Java
 *
 * (c) 2021-2023 Lockstep, Inc.
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 *
 * @author     Lockstep Network <support@lockstep.io>
 * @copyright  2021-2023 Lockstep, Inc.
 * @link       https://github.com/Lockstep-Network/lockstep-sdk-java
 */


package io.lockstep.api.models;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

/**
 * A Payment represents money sent from one company to another.  A single payment may contain payments for
 * one or more invoices; it is also possible for payments to be made in advance of an invoice, for example,
 * as a deposit.  The creator of the Payment is identified by the `CustomerId` field, and the recipient of
 * the Payment is identified by the `CompanyId` field.  Most Payments are uniquely identified both by a
 * Lockstep Platform ID number and a customer ERP "key" that was generated by the system that originated
 * the Payment.  Payments that have not been fully applied have a nonzero `UnappliedAmount` value, which
 * represents a deposit that has been paid and not yet applied to an Invoice.
 */
public class PaymentModel
{
    private @NotNull String groupKey;
    private @NotNull String paymentId;
    private @NotNull String companyId;
    private @Nullable String erpKey;
    private @NotNull Integer erpUpdateStatus;
    private @NotNull Integer erpUpdateAction;
    private @NotNull String paymentType;
    private @NotNull String tenderType;
    private @NotNull Boolean isOpen;
    private @Nullable String memoText;
    private @NotNull String paymentDate;
    private @NotNull String postDate;
    private @NotNull Double paymentAmount;
    private @NotNull Double unappliedAmount;
    private @Nullable String currencyCode;
    private @Nullable String bankAccountId;
    private @Nullable String referenceCode;
    private @NotNull String created;
    private @NotNull String createdUserId;
    private @NotNull String modified;
    private @NotNull String modifiedUserId;
    private @Nullable String appEnrollmentId;
    private @NotNull Boolean isVoided;
    private @NotNull Boolean inDispute;
    private @NotNull Double currencyRate;
    private @NotNull Double baseCurrencyPaymentAmount;
    private @NotNull Double baseCurrencyUnappliedAmount;
    private @Nullable String serviceFabricStatus;
    private @Nullable String sourceModifiedDate;
    private @Nullable PaymentAppliedModel[] applications;
    private @Nullable NoteModel[] notes;
    private @Nullable AttachmentModel[] attachments;
    private @Nullable CustomFieldDefinitionModel[] customFieldDefinitions;
    private @Nullable CustomFieldValueModel[] customFieldValues;

    /**
     * The GroupKey uniquely identifies a single Lockstep Platform account.  All records for this
     * account will share the same GroupKey value.  GroupKey values cannot be changed once created.
     *
     * For more information, see [Accounts and GroupKeys](https://developer.lockstep.io/docs/accounts-and-groupkeys).
     *
     * @return The field groupKey
     */
    public @NotNull String getGroupKey() { return this.groupKey; }
    /**
     * The GroupKey uniquely identifies a single Lockstep Platform account.  All records for this
     * account will share the same GroupKey value.  GroupKey values cannot be changed once created.
     *
     * For more information, see [Accounts and GroupKeys](https://developer.lockstep.io/docs/accounts-and-groupkeys).
     *
     * @param value The new value for groupKey
     */
    public void setGroupKey(@NotNull String value) { this.groupKey = value; }
    /**
     * The unique ID of this record, automatically assigned by Lockstep when this record is
     * added to the Lockstep platform.
     *
     * For the ID of this record in its originating financial system, see `ErpKey`.
     *
     * @return The field paymentId
     */
    public @NotNull String getPaymentId() { return this.paymentId; }
    /**
     * The unique ID of this record, automatically assigned by Lockstep when this record is
     * added to the Lockstep platform.
     *
     * For the ID of this record in its originating financial system, see `ErpKey`.
     *
     * @param value The new value for paymentId
     */
    public void setPaymentId(@NotNull String value) { this.paymentId = value; }
    /**
     * The ID of the company to which this payment belongs.
     *
     * @return The field companyId
     */
    public @NotNull String getCompanyId() { return this.companyId; }
    /**
     * The ID of the company to which this payment belongs.
     *
     * @param value The new value for companyId
     */
    public void setCompanyId(@NotNull String value) { this.companyId = value; }
    /**
     * The unique ID of this record as it was known in its originating financial system.
     *
     * If this company record was imported from a financial system, it will have the value `ErpKey`
     * set to the original primary key number of the record as it was known in the originating financial
     * system.  If this record was not imported, this value will be `null`.
     *
     * For more information, see [Identity Columns](https://developer.lockstep.io/docs/identity-columns).
     *
     * @return The field erpKey
     */
    public @Nullable String getErpKey() { return this.erpKey; }
    /**
     * The unique ID of this record as it was known in its originating financial system.
     *
     * If this company record was imported from a financial system, it will have the value `ErpKey`
     * set to the original primary key number of the record as it was known in the originating financial
     * system.  If this record was not imported, this value will be `null`.
     *
     * For more information, see [Identity Columns](https://developer.lockstep.io/docs/identity-columns).
     *
     * @param value The new value for erpKey
     */
    public void setErpKey(@Nullable String value) { this.erpKey = value; }
    /**
     * Possible statuses for a record that supports ERP Update.
     *
     * @return The field erpUpdateStatus
     */
    public @NotNull Integer getErpUpdateStatus() { return this.erpUpdateStatus; }
    /**
     * Possible statuses for a record that supports ERP Update.
     *
     * @param value The new value for erpUpdateStatus
     */
    public void setErpUpdateStatus(@NotNull Integer value) { this.erpUpdateStatus = value; }
    /**
     * Possible actions for a record that supports ERP Update.
     *
     * @return The field erpUpdateAction
     */
    public @NotNull Integer getErpUpdateAction() { return this.erpUpdateAction; }
    /**
     * Possible actions for a record that supports ERP Update.
     *
     * @param value The new value for erpUpdateAction
     */
    public void setErpUpdateAction(@NotNull Integer value) { this.erpUpdateAction = value; }
    /**
     * The type of payment, AR Payment or AP Payment.
     *
     * Recognized PaymentType values are:
     * * `AR Payment` - A payment made by a Customer to the Company
     * * `AP Payment` - A payment made by the Company to a Vendor
     *
     * @return The field paymentType
     */
    public @NotNull String getPaymentType() { return this.paymentType; }
    /**
     * The type of payment, AR Payment or AP Payment.
     *
     * Recognized PaymentType values are:
     * * `AR Payment` - A payment made by a Customer to the Company
     * * `AP Payment` - A payment made by the Company to a Vendor
     *
     * @param value The new value for paymentType
     */
    public void setPaymentType(@NotNull String value) { this.paymentType = value; }
    /**
     * Cash, check, credit card, wire transfer.
     *
     * Recognized TenderType values are:
     * * `Cash` - A cash payment or other direct transfer.
     * * `Check` - A check payment.
     * * `Credit Card` - A payment made via a credit card.
     * * `Wire Transfer` - A payment made via wire transfer from another financial institution.
     * * `Other` - A payment made via another method not listed above.
     *
     * @return The field tenderType
     */
    public @NotNull String getTenderType() { return this.tenderType; }
    /**
     * Cash, check, credit card, wire transfer.
     *
     * Recognized TenderType values are:
     * * `Cash` - A cash payment or other direct transfer.
     * * `Check` - A check payment.
     * * `Credit Card` - A payment made via a credit card.
     * * `Wire Transfer` - A payment made via wire transfer from another financial institution.
     * * `Other` - A payment made via another method not listed above.
     *
     * @param value The new value for tenderType
     */
    public void setTenderType(@NotNull String value) { this.tenderType = value; }
    /**
     * True if this payment includes some unassigned amount that has not yet been applied to an invoice.  If this
     * value is true, the field `UnappliedAmount` will be nonzero.
     *
     * @return The field isOpen
     */
    public @NotNull Boolean getIsOpen() { return this.isOpen; }
    /**
     * True if this payment includes some unassigned amount that has not yet been applied to an invoice.  If this
     * value is true, the field `UnappliedAmount` will be nonzero.
     *
     * @param value The new value for isOpen
     */
    public void setIsOpen(@NotNull Boolean value) { this.isOpen = value; }
    /**
     * Memo or reference text (ex. memo field on a check).
     *
     * @return The field memoText
     */
    public @Nullable String getMemoText() { return this.memoText; }
    /**
     * Memo or reference text (ex. memo field on a check).
     *
     * @param value The new value for memoText
     */
    public void setMemoText(@Nullable String value) { this.memoText = value; }
    /**
     * The date when this payment was received.  This typically is the date when an accounting employee recorded
     * that they received notification that the payment had occurred, whether they were notified by email, postal
     * mail, or financial transaction notification.
     *
     * @return The field paymentDate
     */
    public @NotNull String getPaymentDate() { return this.paymentDate; }
    /**
     * The date when this payment was received.  This typically is the date when an accounting employee recorded
     * that they received notification that the payment had occurred, whether they were notified by email, postal
     * mail, or financial transaction notification.
     *
     * @param value The new value for paymentDate
     */
    public void setPaymentDate(@NotNull String value) { this.paymentDate = value; }
    /**
     * The date when a payment was posted to a ledger.  This date is often determined by a company's accounting
     * practices and may be different than the date when the payment was received.  This date may be affected by
     * issues such as temporary holds on funds transferred, bank holidays, or other actions.
     *
     * @return The field postDate
     */
    public @NotNull String getPostDate() { return this.postDate; }
    /**
     * The date when a payment was posted to a ledger.  This date is often determined by a company's accounting
     * practices and may be different than the date when the payment was received.  This date may be affected by
     * issues such as temporary holds on funds transferred, bank holidays, or other actions.
     *
     * @param value The new value for postDate
     */
    public void setPostDate(@NotNull String value) { this.postDate = value; }
    /**
     * Total amount of this payment in it's received currency.
     *
     * @return The field paymentAmount
     */
    public @NotNull Double getPaymentAmount() { return this.paymentAmount; }
    /**
     * Total amount of this payment in it's received currency.
     *
     * @param value The new value for paymentAmount
     */
    public void setPaymentAmount(@NotNull Double value) { this.paymentAmount = value; }
    /**
     * Unapplied balance of this payment in it's received currency.  If this amount is nonzero, the field `IsOpen` will be true.
     *
     * @return The field unappliedAmount
     */
    public @NotNull Double getUnappliedAmount() { return this.unappliedAmount; }
    /**
     * Unapplied balance of this payment in it's received currency.  If this amount is nonzero, the field `IsOpen` will be true.
     *
     * @param value The new value for unappliedAmount
     */
    public void setUnappliedAmount(@NotNull Double value) { this.unappliedAmount = value; }
    /**
     * The ISO 4217 currency code for this payment.
     *
     * For a list of ISO 4217 currency codes, see [Query Currencies](https://developer.lockstep.io/reference/get_api-v1-definitions-currencies).
     *
     * @return The field currencyCode
     */
    public @Nullable String getCurrencyCode() { return this.currencyCode; }
    /**
     * The ISO 4217 currency code for this payment.
     *
     * For a list of ISO 4217 currency codes, see [Query Currencies](https://developer.lockstep.io/reference/get_api-v1-definitions-currencies).
     *
     * @param value The new value for currencyCode
     */
    public void setCurrencyCode(@Nullable String value) { this.currencyCode = value; }
    /**
     * The Bank account id for the company to which this payment belongs.
     *
     * @return The field bankAccountId
     */
    public @Nullable String getBankAccountId() { return this.bankAccountId; }
    /**
     * The Bank account id for the company to which this payment belongs.
     *
     * @param value The new value for bankAccountId
     */
    public void setBankAccountId(@Nullable String value) { this.bankAccountId = value; }
    /**
     * Reference code for the payment for the given Erp system.
     *
     * @return The field referenceCode
     */
    public @Nullable String getReferenceCode() { return this.referenceCode; }
    /**
     * Reference code for the payment for the given Erp system.
     *
     * @param value The new value for referenceCode
     */
    public void setReferenceCode(@Nullable String value) { this.referenceCode = value; }
    /**
     * The date on which this record was created.
     *
     * @return The field created
     */
    public @NotNull String getCreated() { return this.created; }
    /**
     * The date on which this record was created.
     *
     * @param value The new value for created
     */
    public void setCreated(@NotNull String value) { this.created = value; }
    /**
     * The ID of the user who created this payment.
     *
     * @return The field createdUserId
     */
    public @NotNull String getCreatedUserId() { return this.createdUserId; }
    /**
     * The ID of the user who created this payment.
     *
     * @param value The new value for createdUserId
     */
    public void setCreatedUserId(@NotNull String value) { this.createdUserId = value; }
    /**
     * The date on which this record was last modified.
     *
     * @return The field modified
     */
    public @NotNull String getModified() { return this.modified; }
    /**
     * The date on which this record was last modified.
     *
     * @param value The new value for modified
     */
    public void setModified(@NotNull String value) { this.modified = value; }
    /**
     * The ID of the user who last modified this payment.
     *
     * @return The field modifiedUserId
     */
    public @NotNull String getModifiedUserId() { return this.modifiedUserId; }
    /**
     * The ID of the user who last modified this payment.
     *
     * @param value The new value for modifiedUserId
     */
    public void setModifiedUserId(@NotNull String value) { this.modifiedUserId = value; }
    /**
     * The AppEnrollmentId of the application that imported this record.  For accounts
     * with more than one financial system connected, this field identifies the originating
     * financial system that produced this record.  This value is null if this record
     * was not loaded from an external ERP or financial system.
     *
     * @return The field appEnrollmentId
     */
    public @Nullable String getAppEnrollmentId() { return this.appEnrollmentId; }
    /**
     * The AppEnrollmentId of the application that imported this record.  For accounts
     * with more than one financial system connected, this field identifies the originating
     * financial system that produced this record.  This value is null if this record
     * was not loaded from an external ERP or financial system.
     *
     * @param value The new value for appEnrollmentId
     */
    public void setAppEnrollmentId(@Nullable String value) { this.appEnrollmentId = value; }
    /**
     * Is the payment voided?
     *
     * @return The field isVoided
     */
    public @NotNull Boolean getIsVoided() { return this.isVoided; }
    /**
     * Is the payment voided?
     *
     * @param value The new value for isVoided
     */
    public void setIsVoided(@NotNull Boolean value) { this.isVoided = value; }
    /**
     * Is the payment in dispute?
     *
     * @return The field inDispute
     */
    public @NotNull Boolean getInDispute() { return this.inDispute; }
    /**
     * Is the payment in dispute?
     *
     * @param value The new value for inDispute
     */
    public void setInDispute(@NotNull Boolean value) { this.inDispute = value; }
    /**
     * The Currency Rate used to get from the account's base currency to the payment amount.
     *
     * @return The field currencyRate
     */
    public @NotNull Double getCurrencyRate() { return this.currencyRate; }
    /**
     * The Currency Rate used to get from the account's base currency to the payment amount.
     *
     * @param value The new value for currencyRate
     */
    public void setCurrencyRate(@NotNull Double value) { this.currencyRate = value; }
    /**
     * Total amount of this payment in the group's base currency.
     *
     * @return The field baseCurrencyPaymentAmount
     */
    public @NotNull Double getBaseCurrencyPaymentAmount() { return this.baseCurrencyPaymentAmount; }
    /**
     * Total amount of this payment in the group's base currency.
     *
     * @param value The new value for baseCurrencyPaymentAmount
     */
    public void setBaseCurrencyPaymentAmount(@NotNull Double value) { this.baseCurrencyPaymentAmount = value; }
    /**
     * Unapplied balance of this payment in the group's base currency.  If this amount is nonzero, the field `IsOpen` will be true.
     *
     * @return The field baseCurrencyUnappliedAmount
     */
    public @NotNull Double getBaseCurrencyUnappliedAmount() { return this.baseCurrencyUnappliedAmount; }
    /**
     * Unapplied balance of this payment in the group's base currency.  If this amount is nonzero, the field `IsOpen` will be true.
     *
     * @param value The new value for baseCurrencyUnappliedAmount
     */
    public void setBaseCurrencyUnappliedAmount(@NotNull Double value) { this.baseCurrencyUnappliedAmount = value; }
    /**
     * The status of this payment within Service Fabric.
     * "UNAUTHORISED" "PENDING" "PAID" "PAID_OFFLINE" "FAILED" "CANCELLED" "REJECTED" "REFUNDED" "PARTIALLY" "PARTIALLY_REFUNDED"
     *
     * @return The field serviceFabricStatus
     */
    public @Nullable String getServiceFabricStatus() { return this.serviceFabricStatus; }
    /**
     * The status of this payment within Service Fabric.
     * "UNAUTHORISED" "PENDING" "PAID" "PAID_OFFLINE" "FAILED" "CANCELLED" "REJECTED" "REFUNDED" "PARTIALLY" "PARTIALLY_REFUNDED"
     *
     * @param value The new value for serviceFabricStatus
     */
    public void setServiceFabricStatus(@Nullable String value) { this.serviceFabricStatus = value; }
    /**
     * The date on which this record was last modified in source ERP.
     *
     * @return The field sourceModifiedDate
     */
    public @Nullable String getSourceModifiedDate() { return this.sourceModifiedDate; }
    /**
     * The date on which this record was last modified in source ERP.
     *
     * @param value The new value for sourceModifiedDate
     */
    public void setSourceModifiedDate(@Nullable String value) { this.sourceModifiedDate = value; }
    /**
     * All applications this payment is associated with.
     * To retrieve this collection, specify `Applications` in the "Include" parameter for your query.
     *
     * @return The field applications
     */
    public @Nullable PaymentAppliedModel[] getApplications() { return this.applications; }
    /**
     * All applications this payment is associated with.
     * To retrieve this collection, specify `Applications` in the "Include" parameter for your query.
     *
     * @param value The new value for applications
     */
    public void setApplications(@Nullable PaymentAppliedModel[] value) { this.applications = value; }
    /**
     * A collection of notes linked to this record.  To retrieve this collection, specify `Notes` in the
     * `include` parameter when retrieving data.
     *
     * To create a note, use the [Create Note](https://developer.lockstep.io/reference/post_api-v1-notes)
     * endpoint with the `TableKey` to `Payment` and the `ObjectKey` set to the `PaymentId` for this record.  For
     * more information on extensibility, see [linking extensible metadata to objects](https://developer.lockstep.io/docs/custom-fields#linking-metadata-to-an-object).
     *
     * @return The field notes
     */
    public @Nullable NoteModel[] getNotes() { return this.notes; }
    /**
     * A collection of notes linked to this record.  To retrieve this collection, specify `Notes` in the
     * `include` parameter when retrieving data.
     *
     * To create a note, use the [Create Note](https://developer.lockstep.io/reference/post_api-v1-notes)
     * endpoint with the `TableKey` to `Payment` and the `ObjectKey` set to the `PaymentId` for this record.  For
     * more information on extensibility, see [linking extensible metadata to objects](https://developer.lockstep.io/docs/custom-fields#linking-metadata-to-an-object).
     *
     * @param value The new value for notes
     */
    public void setNotes(@Nullable NoteModel[] value) { this.notes = value; }
    /**
     * A collection of attachments linked to this record.  To retrieve this collection, specify `Attachments` in
     * the `include` parameter when retrieving data.
     *
     * To create an attachment, use the [Upload Attachment](https://developer.lockstep.io/reference/post_api-v1-attachments)
     * endpoint with the `TableKey` to `Payment` and the `ObjectKey` set to the `PaymentId` for this record.  For
     * more information on extensibility, see [linking extensible metadata to objects](https://developer.lockstep.io/docs/custom-fields#linking-metadata-to-an-object).
     *
     * @return The field attachments
     */
    public @Nullable AttachmentModel[] getAttachments() { return this.attachments; }
    /**
     * A collection of attachments linked to this record.  To retrieve this collection, specify `Attachments` in
     * the `include` parameter when retrieving data.
     *
     * To create an attachment, use the [Upload Attachment](https://developer.lockstep.io/reference/post_api-v1-attachments)
     * endpoint with the `TableKey` to `Payment` and the `ObjectKey` set to the `PaymentId` for this record.  For
     * more information on extensibility, see [linking extensible metadata to objects](https://developer.lockstep.io/docs/custom-fields#linking-metadata-to-an-object).
     *
     * @param value The new value for attachments
     */
    public void setAttachments(@Nullable AttachmentModel[] value) { this.attachments = value; }
    /**
     * A collection of custom fields linked to this record.  To retrieve this collection, specify
     * `CustomFieldDefinitions` in the `include` parameter when retrieving data.
     *
     * To create a custom field, use the [Create Custom Field](https://developer.lockstep.io/reference/post_api-v1-customfieldvalues)
     * endpoint with the `TableKey` to `Payment` and the `ObjectKey` set to the `PaymentId` for this record.  For
     * more information on extensibility, see [linking extensible metadata to objects](https://developer.lockstep.io/docs/custom-fields#linking-metadata-to-an-object).
     *
     * @return The field customFieldDefinitions
     */
    public @Nullable CustomFieldDefinitionModel[] getCustomFieldDefinitions() { return this.customFieldDefinitions; }
    /**
     * A collection of custom fields linked to this record.  To retrieve this collection, specify
     * `CustomFieldDefinitions` in the `include` parameter when retrieving data.
     *
     * To create a custom field, use the [Create Custom Field](https://developer.lockstep.io/reference/post_api-v1-customfieldvalues)
     * endpoint with the `TableKey` to `Payment` and the `ObjectKey` set to the `PaymentId` for this record.  For
     * more information on extensibility, see [linking extensible metadata to objects](https://developer.lockstep.io/docs/custom-fields#linking-metadata-to-an-object).
     *
     * @param value The new value for customFieldDefinitions
     */
    public void setCustomFieldDefinitions(@Nullable CustomFieldDefinitionModel[] value) { this.customFieldDefinitions = value; }
    /**
     * A collection of custom fields linked to this record.  To retrieve this collection, specify
     * `CustomFieldValues` in the `include` parameter when retrieving data.
     *
     * To create a custom field, use the [Create Custom Field](https://developer.lockstep.io/reference/post_api-v1-customfieldvalues)
     * endpoint with the `TableKey` to `Payment` and the `ObjectKey` set to the `PaymentId` for this record.  For
     * more information on extensibility, see [linking extensible metadata to objects](https://developer.lockstep.io/docs/custom-fields#linking-metadata-to-an-object).
     *
     * @return The field customFieldValues
     */
    public @Nullable CustomFieldValueModel[] getCustomFieldValues() { return this.customFieldValues; }
    /**
     * A collection of custom fields linked to this record.  To retrieve this collection, specify
     * `CustomFieldValues` in the `include` parameter when retrieving data.
     *
     * To create a custom field, use the [Create Custom Field](https://developer.lockstep.io/reference/post_api-v1-customfieldvalues)
     * endpoint with the `TableKey` to `Payment` and the `ObjectKey` set to the `PaymentId` for this record.  For
     * more information on extensibility, see [linking extensible metadata to objects](https://developer.lockstep.io/docs/custom-fields#linking-metadata-to-an-object).
     *
     * @param value The new value for customFieldValues
     */
    public void setCustomFieldValues(@Nullable CustomFieldValueModel[] value) { this.customFieldValues = value; }
};
